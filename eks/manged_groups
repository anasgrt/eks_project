# EKS Managed Node Group(s)
module "eks_managed_node_group" {
  source = "terraform-aws-modules/eks/aws//modules/eks-managed-node-group"

  name            = "separate-eks-mng"
  cluster_name    = module.eks.cluster_name
  cluster_version = "1.28"

  # subnet_ids = ["subnet-abcde012", "subnet-bcde012a", "subnet-fghi345a"]
  subnet_ids = module.vpc.private_subnets

  // The following variables are necessary if you decide to use the module outside of the parent EKS module context.
  // Without it, the security groups of the nodes are empty and thus won't join the cluster.
  cluster_primary_security_group_id = module.eks.cluster_primary_security_group_id
  vpc_security_group_ids            = [module.eks.node_security_group_id]

  // Note: `disk_size`, and `remote_access` can only be set when using the EKS managed node group default launch template
  // This module defaults to providing a custom launch template to allow for custom security groups, tag propagation, etc.
  // use_custom_launch_template = false
  // disk_size = 50
  //
  //  # Remote access cannot be specified with a launch template
  //  remote_access = {
  //    ec2_ssh_key               = module.key_pair.key_pair_name
  //    source_security_group_ids = [aws_security_group.remote_access.id]
  //  }


  min_size     = 0
  max_size     = 1
  desired_size = 1

  instance_types = ["t2.medium"]
  capacity_type  = "ON_DEMAND"

  # create_iam_role = true
  iam_role_arn = aws_iam_role.managed-groups-eks-iam-role.arn

  labels = {
    Environment = "education-eks"
    # GithubRepo  = "terraform-aws-eks"
    # GithubOrg   = "terraform-aws-modules"
  }

  # taints = {
  #   dedicated = {
  #     key    = "dedicated"
  #     value  = "gpuGroup"
  #     effect = "NO_SCHEDULE"
  #   }
  # }

  tags = {
    Environment = "education"
    Terraform   = "true"
  }
}